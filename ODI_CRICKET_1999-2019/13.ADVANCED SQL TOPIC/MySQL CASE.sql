/* CREATING VIEW BATSMAN_RUNS_VS_OPPOSITION. FIRST COLUMN CONTAIN BATSMAN NAME ,
SECOND COLUMN CONTAIN BATSMAN PLAYED ON OPPOSITION ,
THIRD COLUMN CONTAIN TOTAL_RUNS COUNTRY WISE ,FOURTH COLUMN CONTAIN NUMBER OF MATCH PLAYED COUNTRY WISE
AND FIFTH COLUMN CONTAIN AVERAGE OF BATSMAN COUNTRY WISE 
(IF  BATSMAN NOT_OUT IN MATCH , RUNS IS ADD BUT  MATCH IS NOT ADD  WHILE CALCULATED AVERAGE )   */
                
CREATE OR REPLACE VIEW BATSMAN_RUNS_VS_OPPOSITION AS
SELECT BATSMAN, OPPOSITION, SUM(RUNS) AS TOTAL_RUNS ,COUNT(*) AS TOTAL_MATCH_PLAYED ,
			ROUND(SUM(RUNS)/SUM(CASE 
									WHEN `OUT/NOT_OUT`='NOT OUT' THEN "0"
                                    ELSE "1" 
                                    END  ) ,2)AS AVERAGE 
									FROM BATSMAN GROUP BY 1,2 ORDER BY 1,3 DESC;



----- CREATEING  PROCEDURE " BATSMAN_CENTURY " WITH THE HELP OF---------- CASE  STATEMENT---

DELIMITER $$
CREATE PROCEDURE BATSMAN_CENTURY()
BEGIN 
		SELECT BATSMAN, SUM(CASE 
						WHEN RUNS >=100 THEN "1"
						ELSE "0"
						END)  AS CENTURIES
						FROM BATSMAN  GROUP BY 1 ORDER BY 2 DESC;
END $$
DELIMITER ;
CALL BATSMAN_CENTURY();

