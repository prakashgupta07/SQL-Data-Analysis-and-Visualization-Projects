USE ODI_CRICKET;
SELECT * FROM BATSMAN  ;
SELECT * FROM BOWLERS;
SELECT * FROM ODI_MATCH_RESULT ;
select runs from 
(select distinct  runs from batsman order by runs desc limit 10) test order by runs limit 1;
select max(runs)  from batsman where runs  not in(select runs from (select runs from batsman order by runs desc limit 2) t);
select max(runs)  from batsman where runs  not in(264,237,215,210);



----------- cte--------

-- FINDING THE RANK OF HIGHEST  BATSMAN SCORE WITH THE HELP OF CTE( COMMON TABLE EXPRESSION )  
WITH HIGHEST_RUNS AS
(
SELECT BATSMAN,RUNS,DENSE_RANK() OVER(ORDER BY RUNS DESC) AS DANSERANK FROM BATSMAN 
)
SELECT * FROM HIGHEST_RUNS  ;


----- FINDING THE RANK OF HIGHEST TOTAL_RUNS WITH THE HELP OF CTE( COMMON TABLE EXPRESSION )
WITH TOTAL_RUNS_RANK AS 
(
		SELECT BATSMAN,SUM(RUNS) AS TOTAL_RUNS,DENSE_RANK() OVER(ORDER BY SUM(RUNS) DESC) AS RANKING
        FROM BATSMAN GROUP BY 1 ORDER BY 2 DESC
) SELECT * FROM TOTAL_RUNS_RANK;


----- FINDING THE RANK OF HIGHEST BOWLERS WICKETS WITH THE HELP OF CTE(COMMON TABLE EXPRESSION)

WITH HIGHEST_WKTES_INNING AS
(
		SELECT BOWLER,WKTES ,DENSE_RANK() OVER(ORDER BY WKTES DESC) RANKING FROM BOWLERS
)
SELECT * FROM HIGHEST_WKTES_INNING;


-- FIND THE nth  HIGHEST WICKETS TAKER
WITH HIGHEST_WKTES_INNING AS
(
		SELECT BOWLER,WKTES ,DENSE_RANK() OVER(ORDER BY WKTES DESC) RANKING FROM BOWLERS
)
SELECT * FROM HIGHEST_WKTES_INNING WHERE RANKING=2;


-------- FINDING THE TOTAL_WICKET OF BOWLER 

WITH TOTAL_WKTES_RANK AS
(
	SELECT BOWLER,SUM(WKTES) AS TOTAL_WKTES,DENSE_RANK() OVER(ORDER BY SUM(WKTES) DESC) AS RANKING
        FROM BOWLERS GROUP BY 1 ORDER BY 2 DESC	
) SELECT * FROM TOTAL_WKTES_RANK;
